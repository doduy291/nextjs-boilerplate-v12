{
  "compilerOptions": {
    /* Projects */
    "incremental": true /* Save .tsbuildinfo files to allow for incremental compilation of projects. */,

    /* Language and Environment */
    "target": "ES5" /* Set the JavaScript language version for emitted JavaScript and include compatible library declarations. */,
    "jsx": "preserve" /* Specify what JSX code is generated. */,
    "useDefineForClassFields": true /* Emit ECMAScript-standard-compliant class fields. */,
    "lib": ["dom", "dom.iterable", "esnext"],

    /* Modules */
    "module": "ESNext" /* Specify what module code is generated. */,
    "moduleResolution": "node" /* Specify how TypeScript looks up a file from a given module specifier. */,
    "baseUrl": "." /* Specify the base directory to resolve non-relative module names. */,
    "paths": {
      /* Specify a set of entries that re-map imports to additional lookup locations. */
      "~/*": ["src/*"]
    },
    "types": [] /* Specify type package names to be included without being referenced in a source file. */,
    "resolveJsonModule": true /* Enable importing .json files. */,

    "allowJs": true /* Allow JavaScript files to be a part of your program. Use the 'checkJS' option to get errors from these files. */,

    /* Emit */
    "removeComments": true /* Disable emitting comments. */,
    "noEmit": true /* Disable emitting files from a compilation. */,
    "importsNotUsedAsValues": "error" /* Specify emit/checking behavior for imports that are only used for types. */,

    /* Interop Constraints */
    "isolatedModules": true /* Ensure that each file can be safely transpiled without relying on other imports. */,
    "allowSyntheticDefaultImports": true /* Allow 'import x from y' when a module doesn't have a default export. */,
    "esModuleInterop": true /* Emit additional JavaScript to ease support for importing CommonJS modules. This enables 'allowSyntheticDefaultImports' for type compatibility. */,
    "forceConsistentCasingInFileNames": true /* Ensure that casing is correct in imports. */,

    /* Type Checking */
    "strict": true /* Enable all strict type-checking options. */,
    "noImplicitAny": true /* Enable error reporting for expressions and declarations with an implied 'any' type. */,
    "noUnusedLocals": true /* Enable error reporting when local variables aren't read. */,
    "noUnusedParameters": true /* Raise an error when a function parameter isn't read. */,
    "noImplicitReturns": false /* Disable error reporting for codepaths that do not explicitly return in a function. */,
    "allowUnusedLabels": false /* Enable error reporting for unused labels. */,
    "allowUnreachableCode": false /* Enable error reporting for unreachable code. */,

    /* Completeness */
    "skipLibCheck": true /* Skip type checking all .d.ts files. */
  },
  "include": ["next-env.d.ts", "**/*.ts", "**/*.tsx"],
  "exclude": ["node_modules"]
}
